(define (make-point x y)
  (cons x y))
(define (x-point p)
  (car p))
(define (y-point p)
  (cdr p))

(define (make-segment start end)
  (cons start end))
(define (start-segment s)
  (car s))
(define (end-segment s)
  (cdr s))

(define (make-rect s1 s2)
  (cons s1 s2))
(define (length-rect rect)
  (car rect))
(define (width-rect rect)
  (cdr rect))

(define (length-of-rect rect)
  (let ((length (length-rect rect)))
    (let ((start (start-segment length))
          (end (end-segment length)))
      (- (x-point end) (x-point start)))))
(define (width-of-rect rect)
  (let ((width (width-rect rect)))
    (let ((start (start-segment width))
          (end (end-segment width)))
      (- (y-point end) (y-point start)))))


(define (perimeter-rect rect)
  (* (+ (length-of-rect rect) (width-of-rect rect)) 2))
(define (area-rect rect)
  (* (length-of-rect rect) (width-of-rect rect)))

(define l (make-segment (make-point 1 2)
                        (make-point 4 2)))
(define w (make-segment (make-point 1 2)
                        (make-point 1 4)))

(define r (make-rect l w))
(length-of-rect r)
(width-of-rect r)
(perimeter-rect r)
(area-rect r)